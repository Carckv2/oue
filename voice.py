import gradio as gr
import os
from TTS.api import TTS

# Pretrained multi-speaker TTS model
model_name = TTS.list_models()[0]  # рдкрд╣рд▓рд╛ рдореЙрдбрд▓ рд▓реЗ рд░рд╣рд╛ рд╣реВрдБ, рдЖрдк рдЪрд╛рд╣реЗрдВ рддреЛ specific рдЪреБрдиреЗрдВ
tts = TTS(model_name=model_name, progress_bar=False, gpu=False)

def clone_and_tts(text, speaker_wav):
    if not text.strip():
        return "Error: рдЯреЗрдХреНрд╕реНрдЯ рдЦрд╛рд▓реА рд╣реИ!"
    if not speaker_wav:
        return "Error: рдЖрд╡рд╛рдЬрд╝ рдХреА рдлрд╝рд╛рдЗрд▓ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ!"

    # рдЖрдЙрдЯрдкреБрдЯ рдлрд╛рдЗрд▓
    output_path = "output.wav"

    # рд╣рд┐рдВрджреА рдЯреЗрдХреНрд╕реНрдЯ рдХреЛ рдЖрдкрдХреА рдЖрд╡рд╛рдЬрд╝ рдореЗрдВ рдХрдиреНрд╡рд░реНрдЯ рдХрд░реЗрдВ
    tts.tts_to_file(
        text=text,
        speaker_wav=speaker_wav,
        language="hi",
        file_path=output_path
    )
    return output_path

# Gradio WebUI
with gr.Blocks() as demo:
    gr.Markdown("## ЁЯОд Voice Cloning Hindi TTS WebUI")
    with gr.Row():
        text = gr.Textbox(label="рд╣рд┐рдВрджреА рдЯреЗрдХреНрд╕реНрдЯ рджрд░реНрдЬ рдХрд░реЗрдВ", placeholder="рдпрд╣рд╛рдБ рдЕрдкрдирд╛ рд╣рд┐рдВрджреА рдЯреЗрдХреНрд╕реНрдЯ рд▓рд┐рдЦреЗрдВ...")
        speaker_wav = gr.Audio(label="рдЖрдкрдХреА рдЖрд╡рд╛рдЬрд╝ рдХреА WAV рдлрд╝рд╛рдЗрд▓", type="filepath")
    btn = gr.Button("Generate Speech")
    output_audio = gr.Audio(label="Output Speech", type="filepath")

    btn.click(fn=clone_and_tts, inputs=[text, speaker_wav], outputs=output_audio)

demo.launch()
